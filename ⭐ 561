Given an array of 2n integers, your task is to group these integers into n pairs of integer, say (a1, b1), (a2, b2), ..., (an, bn) which makes sum of min(ai, bi) for all i from 1 to n as large as possible.

Example 1:
Input: [1,4,3,2]

Output: 4
Explanation: n is 2, and the maximum sum of pairs is 4 = min(1, 2) + min(3, 4).
Note:
n is a positive integer, which is in the range of [1, 10000].
All the integers in the array will be in the range of [-10000, 10000].


Analysis:

1. 우선 주어진 vector를 sort 하는 것이 중요.
  - 나는 가장 먼저 set을 떠올렸는데, set을 사용하게 되면 중복된 element의 경우 자동적으로 삭제되기 때문에 이 경우 맞지 않음.
  - 분명히 주어진 vector를 크기 순서대로 sort하는 방법이 있을거라 생각 -> 역시나 sort(nums.begin(), nums.end()); 존재.
2. sorted vector의 홀수 번째 element만 total에 포함시키는 방법으로 total 구함.
  - 그 과정에서, 나는 mod2가 1임을 이용하여 홀수를 찾았는데, 이 경우 짝수 번째도 계속 비교구문이 등장해서 시간을 두 배로 잡아먹는다.
  그래서 increment를 2로 하거나 i의 마지막 값을 절반으로 줄이고 for loop 내부에서 i에 2를 곱해주는 방법을 확인.
  
'''C++
class Solution {
public:
    int arrayPairSum(vector<int>& nums) 
    {
        int total = 0;
        sort(nums.begin(), nums.end());
        for(int i = 0; i < nums.size(); i += 2)
        {
            total += nums[i];
        }
        return total;
    }
};
'''
